@import "../settings";
@import "foundation/functions";
@import "compass/css3/border-radius";
@import "compass/css3/box-shadow";
@import "compass/css3/images";
@import "compass/css3/transform";
@import "foundation/components/type";
@import "foundation/components/grid";

@-webkit-keyframes spinner-rotation {
  from {-webkit-transform: rotate(0deg);}
  to {-webkit-transform: rotate(359deg);}
}

@-moz-keyframes spinner-rotation {
  from {-moz-transform: rotate(0deg);}
  to {-moz-transform: rotate(359deg);}
}

@-o-keyframes spinner-rotation {
  from {-o-transform: rotate(0deg);}
  to {-o-transform: rotate(359deg);}
}

@keyframes spinner-rotation {
  from {transform: rotate(0deg);}
  to {transform: rotate(359deg);}
}

@mixin spinner($spinner-height: 20px, $spinner-color: rgb(0,174,239)) {
  height: $spinner-height;
  width: $spinner-height;
  margin: 0px auto;
  position: relative;
  -webkit-animation: spinner-rotation .8s infinite linear;
  -moz-animation: spinner-rotation .8s infinite linear;
  -o-animation: spinner-rotation .8s infinite linear;
  animation: spinner-rotation .8s infinite linear;
  border-left: $spinner-height/10 solid rgba($spinner-color,.15);
  border-right: $spinner-height/10 solid rgba($spinner-color,.15);
  border-bottom: $spinner-height/10 solid rgba($spinner-color,.15);
  border-top: $spinner-height/10 solid rgba($spinner-color,.8);
  border-radius: 100%;
}

@mixin triangle($direction, $color, $size) {
  @if $direction == "left" {
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    border-top: $size solid transparent;
  }
  @else if $direction == "right" {
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    border-top: $size solid transparent;
  }
  @else if $direction == "up" {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  }
  @else if $direction == "down" {
    border-right: $size solid transparent;
    border-left: $size solid transparent;
    border-top: $size solid $color;
  }
 
  height: 0;
  width: 0;
}

@mixin map-box-shadow() {
  @include single-box-shadow(rgba(0,0,0,0.3));
}

// display: table-cell;
// vertical-align: middle;
// text-align: center;
@mixin arrow($height: 0.3em, $line-width: 0.2em, $arrow-color: $primary-color, $side: 'before', $direction: 'right') {
  display: table-cell;
  vertical-align: middle;
  text-align: center;

  &::before {
    color: $arrow-color;
    border-style: solid;
    border-width: $line-width $line-width 0 0;
    content: '';
    display: inline-block;
    height: $height;
    width: $height;

    @if $side == 'before' {
      margin-right: $height/2;
    }
    @else if $side == 'after' {
      margin-left: $height/2;
    }

    @if $direction == 'up' or $direction == 'down' {
      margin-bottom: $height/4;
    }
  }

  &:before {
    @if $direction == 'left' {
      @include transform(rotate(-135deg));
    } 
    @else if $direction == 'right' {
      @include transform(rotate(45deg));
    }
    @else if $direction == 'up' {
      @include transform(rotate(-45deg));
    }
    @else if $direction == 'down' {
      @include transform(rotate(135deg));
    }
  }
}

@mixin standard-item() {
  @include item-by-user();
}

@mixin single-item() {
  @include item-by-user($dark-details: true);
  @include border-top-radius(0em);

  margin-top: 1px;
  margin-bottom: 0em;

  & > .inner .activity {
    margin-top: emCalc(-70px);
    background-color: transparent;
    pointer-events: none; // div overlaps map so disable events here so that map drag / click works
  }

  & > .inner .activity .info-section {
    height: emCalc(70px);
  }

  & > .inner .activity {

    & > .content {
      padding: 0.5em;
      pointer-events: all;

      @media only screen and (min-width: 48em) {
        padding: 1em;
      }

      blockquote {
        margin-bottom: 0em;
        padding: 0.25em 0.9em 0.25em 0.9em;

        @media only screen and (min-width: 48em) {
          padding: 0.5em 1em 0.5em 1em;
        }
      }

      .text {
        &.intro p {
          font-style: italic;
        }

        ul {
          margin-left: 20px;
        }
      }
    }
  }

  // Make sure certain elements can receive events
  input, textarea, a {
    pointer-events: all;
  }
}

@mixin png-arrow($direction: 'down', $color: false) {
  @if $color { $color: '_' + $color; }
  @else { $color: '' }

  background-image: url('/images/' + $direction + $color + '.png');
}

@mixin keyframe($name) {
  @keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }
  }

  @-moz-keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }
  }

  @-webkit-keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }  
  }

  @-ms-keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }  
  }

  @-o-keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }  
  } 
}

@mixin animation($name) {
  animation-duration: 0.001s;
  -o-animation-duration: 0.001s;
  -ms-animation-duration: 0.001s;
  -moz-animation-duration: 0.001s;
  -webkit-animation-duration: 0.001s;

  animation-name: $name;
  -o-animation-name: $name;
  -ms-animation-name: $name;        
  -moz-animation-name: $name;
  -webkit-animation-name: $name;
}

@mixin multi-column($columns-large: 2, $columns-small: 1, $column-gap: 0.5em) {
  display: block;

  -moz-column-count: $columns-small;
  -moz-column-gap: $column-gap;
  -webkit-column-count: $columns-small;
  -webkit-column-gap: $column-gap;
  column-count: $columns-small;
  column-gap: $column-gap;

  @media only screen and (min-width: 48em) {  
    -moz-column-count: $columns-large;
    -moz-column-gap: $column-gap;
    -webkit-column-count: $columns-large;
    -webkit-column-gap: $column-gap;
    column-count: $columns-large;
    column-gap: $column-gap;
  }
}

@mixin more-button() {
  @include grid-row($behavior: nest);

  margin-left: 0em;
  margin-right: 0em;

  & > .content {
    @include grid-column(12);
    
    text-align: center;
  }
}

@mixin standard-form-panel() {
  padding: emCalc(15px);
  background-color: $standard-panel-bg;
}

@mixin standard-padding() {
  padding-left: 0.4em;
  padding-right: 0.4em;

  @media only screen and (min-width: 48em) {
    padding-left: 0.9em;
    padding-right: 0.9em;
  }
}

@mixin standard-bar-background($color: $primary-color, $clear: false, $shadow: true) {
  background-color: $color;
  @if $clear { clear: both; }
}

@mixin standard-panel-color() {
  background-color: $standard-panel-bg;
}

@mixin standard-corners($position: "all") {
  @include border-radius($standard-corner-radius);
}

@mixin standard-bar() {
  border-top: 2px solid $primary-color;
  font-size: 0.9em;
  margin-left: 0px;
  margin-right: 0px;
  margin-top: 0;
  cursor: pointer;
}

@mixin entry-with-profile($picture-width: 4.5em, $fixed-details: true, $dark-details: false) {
  @include grid-row($behavior: nest);
  $info-section-margin: 0em;
  $info-section-padding: 0.3em;
  $info-section-height: $picture-width;
  $action-width-small: 2em;
  $action-width-large: 2.5em;
  $info-image-radius: $picture-width;

  // padding: $info-section-padding 0;
  margin: $info-section-margin;

  .actions {
    // margin-top: -$info-section-padding;
    font-size: 1em;
    color: black;
    float: right;
    z-index: 10;
    overflow: scroll;
    position: relative;
    height: 100%;

    width: $action-width-small;

    @media only screen and (min-width: 48em) {
      width: $action-width-large*2;
    }

    &.fixed {
      position: absolute;
      right: 0em;
      left: inherit;
    }

    &.show {
      display: block;
    }

    a.action {
      @include single-transition(background-color);

      background-color: $secondary-color;
      display: inline-block;
      pointer-events: all;
      float: right;
      font-family: Raleway;
      width: $action-width-small;
      height: $action-width-small;

      @media only screen and (min-width: 48em) {
        width: $action-width-large;
        height: $action-width-large;
      }

      &:hover,
      &:focus {
        background-color: darken($secondary-color, 5%);
      }

      &:before {
        $action-font-size: 1.2em;
        $action-line-height-small: 1.7em;
        $action-left-padding-small: 0.6em;
        $action-line-height-large: 2em;
        $action-left-padding-large: 0.8em;

        color: lighten($secondary-color, 75%);
        font-weight: 100;

        font-size: $action-font-size;
        padding-left: $action-left-padding-small;
        line-height: $action-line-height-small;

        @media only screen and (min-width: 48em) {
          padding-left: $action-left-padding-large;
          line-height: $action-line-height-large;
        }
      }

      &.remove {
        background-color: $warning-color;

        &:hover,
        &:focus {
          background-color: darken($warning-color, 5%);
        }

        &:before {
          content: "X";
          color: lighten($warning-color, 75%);
        }

        &.ready {
          background-color: darken($warning-color, 25%);
    
          &:before {
            color: lighten($warning-color, 75%);
          }
        }
      }

      &.edit {
        &:before {
          content: "E";
        }
      }

      &.next:before {
        content: ">";
      }

      &.previous:before {
        content: "<";
      }

      &.previous,
      &.next {
        background-color: $primary-color;

        &:hover,
        &:focus {
          background-color: darken($primary-color, 5%);
        }

        &:before {
          color: lighten($primary-color, 75%);
        }
      }

      &.clear {
        display: none;

        @media only screen and (min-width: 48em) {
          display: inherit;
          visibility: hidden;
        }
      }
    }
  }

  .info-section {
    @include grid-column(12);

    @if $fixed-details { height: $info-section-height; }
    font-size: 1em;
    color: black;
    padding-left: $info-section-margin;
    padding-right: $info-section-margin;
    pointer-events: none;

    .picture {
      float: left;
      width: $info-section-height;
      height: $info-section-height;
      pointer-events: all;
      padding: 0.2em;

      img {
        @include border-radius($info-image-radius);
      }
    }

    .details {
      @if $fixed-details { height: $picture-width; }
    
      padding: 1em 0.8em 1em 0.4em;
      float: left;
      pointer-events: all;

      .owner {
        line-height: 1em;
      }

      .date {
        font-size: 0.9em;
        color: #999999;
        line-height: 2em;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }

    @if $dark-details {
      overflow-x: scroll;
      -webkit-overflow-scrolling: touch;
      // background-color: $topbar-bg;
      height: 140px;
      color: white;

      .picture {
        float: left;
        width: $info-section-height;
        height: $info-section-height;
        background-color: $dark-details-bg;
        z-index: 2;

        img {
          height: 100%;
          width: 100%;
          margin-top: 0em;
          @include border-radius($info-image-radius);
        }
      }

      .details {
        float: left;
        margin-left: 0em;
        background-color: $dark-details-bg;
        z-index: 1;

        @media only screen and (min-width: 48em) {
          // right: $info-section-margin;
        }

        .date {
          color: #D8D8D8;
        }
      }
    }

    &.map {
      overflow-x: scroll;
      -webkit-overflow-scrolling: touch;
      background-color: rgba(0, 0, 0, 0.4);
      height: 140px;
      color: white;

      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;

      .picture,
      .details {
        // margin-top: emCalc(140px) - $picture-width;
      }

      .picture {
        bottom: inherit;
        float: left;
        width: $info-section-height;
        height: $info-section-height;
        background-color: $dark-details-bg;
        z-index: 2;

        img {
          height: 100%;
          width: 100%;
          margin-top: 0em;
          @include border-radius($info-section-height/2);
        }
      }

      .details {
        float: left;
        margin-left: 0em;
        bottom: inherit;
        background-color: $dark-details-bg;
        z-index: 1;

        .date {
          color: #D8D8D8;
        }
      }
    }

    &.large {
      height: 180px;
    }

    &.small {
      padding: 0.5em 0em;
      margin-bottom: 0em;

      .picture {
        position: absolute;
        width: 1.9em;
        height: 1.9em;
      }

      .details {
        position: absolute;
        margin-left: 2.4em;
        font-family: $header-font-family;

        .date, .owner {
          float: left;
          line-height: 1.4em;
          font-size: emCalc(16px);
        }

        .owner {
          font-weight: 400;
        }

        .date:before {
          content: "-";
          padding: 0.3em;
        }
      }
    }
  }

  .content {
    @include grid-column(12);

    padding: $standard-padding;
    padding-right: $action-width-small;

    @media only screen and (min-width: 48em) {
      padding-right: $action-width-large;
    }

    h2 {
      line-height: 1.2em;
    }

    h5 {
      line-height: 1.4em;
      margin-bottom: 0.5em;
    }

    p:last-of-type {
      margin-bottom: 0em;
    }
  }
}

@mixin item-by-user($dark-details: false) {
  @include grid-row($behavior: nest);
  @include panel();
  @include standard-corners($standard-corner-radius);

  $story-radius: 1px;
  margin: 0 $ribbon-wrapper-strip;
  padding: 0em;
  position: relative;
  margin-bottom: $standard-small-margin * 2;
  border: none;

  @media only screen and (min-width: 48em) {
    margin: 0em;
    margin-bottom: $standard-margin * 2;

    &:last-of-type {
      @include animation(feedInserted);
    }
  }

  .ribbon-wrapper {
    margin-top: $standard-margin;
    z-index: 2;
  }

  & > .inner {
    @include grid-column(12, $collapse: true);
  
    margin-bottom: 0em;

    .activity {

      @include entry-with-profile($dark-details: $dark-details);
      @include standard-panel-color();

      z-index: 90;
      margin: 0em;

      & > .content a.more {
        line-height: 2.2em;
        font-style: italic;
        font-size: 0.9em;

        &:after {
          content: "\00a0→";
        }
      }

      .actions {
        margin-top: 0em;
      }

    }

    .item-actions {
      @include grid-row($behavior: nest);
      @include standard-bar();

      margin: 0 !important;
      cursor: default;
      font-size: 0.8em;
      line-height: 3em;

      .show-comments {
        @include grid-column(7);
      }

      .main-actions {
        @include grid-column(5);     
      }

      a.comments {
        @include arrow(8px, $direction: 'right');
        font-size: 12m;
      }

      .action {
        ul {
          list-style: none;
          display: inline;
          width: auto;
          float: right;

          li {
            float: left;
            padding-left: 5px;
          }

          & > .separator {
            width: 2px;
            height: 24px;
            margin: 8px 1px 0 1px;
            border-right: 1px solid $primary-color;

            &:before {
            }
          }
        }

        a {
          font-size: 0.95em;
          height: 34px;
          padding: 0;
          color: $primary-color;

          &.disabled {
            opacity: 0.3;
          }
        }
        
        a.new-short:before,
        a.new-story:before {
          content: "+";
          font-size: 1.8em;
          font-weight: 400;
          padding-right: 1px;
          top: 3px;
          position: relative;
        }
      }

      @media only screen and (min-width: 48em) {
        .action a {
          font-size: 0.9em;
        }
      }

      @media only screen and (min-width: 48em) {
        font-size: 0.9em;
      }
    }

    .short-comments {
      @include grid-row($behavior: nest);

      margin: 0em;
      
      & > .inner {
        @include grid-column(12);

        overflow: hidden;
        height: 0px;
        background-color: #FFF;
        // border: 1px solid #f3f3f3;
        border-top: none;
        padding: 0em;
        
        .comment {
          padding: 0.5em;

          &:last-of-type {  
            border-bottom: 2px solid $warning-color;
          }
        }
      }
    }

    .comments-notice {
      $comment-notice-height: emCalc(30px);
      $comment-notice-margin-top: emCalc(27px);
      $comment-notice-font-size: 0.9em;

      @include grid-row($behavior: nest);

      position: absolute;
      width: 100%;
      padding: 0em;
      margin-left: emCalc(0px);
      margin-right: emCalc(0px);
      margin-top: -$comment-notice-margin-top;

      .inner {
        @include grid-column(12);

        display: none;
        font-size: $comment-notice-font-size;
        line-height: $comment-notice-height;
        height: $comment-notice-height;
        background-color: rgba(0, 0, 0, 0.6);
        text-align: center;
        color: white;
      }
    }
  }

  &.expanded {
    .item-actions {
      a.comments {
        @include arrow(8px, $direction: 'down');
      }
    }

    .comments-notice .inner {
      @include arrow(8px, $direction: 'down', $arrow-color: 'white');

      display: inherit;
      cursor: pointer;
    }

    .short-comments .inner {
      height: 100%;
      overflow-y: scroll;
      -webkit-overflow-scrolling: touch;
      max-height: 250px;

      @media only screen and (min-width: 48em) {
        max-height: 450px;
      }
    }
  }
}