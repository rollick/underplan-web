@import "../settings";
@import "compass/css3/border-radius";
@import "compass/css3/box-shadow";
@import "compass/css3/images";
@import "foundation/components/type";
@import "foundation/components/grid";

.up-down {
  &:before {
    background-image: url('/images/right.svg');
    background-repeat: no-repeat;
    background-size: 12px 12px;
    background-position: 0px 3px;
    padding-left: 12px;
    height: 24px;
    content: "\00a0\00a0";
  }

  &.open:before {
    background-image: url("/images/down.svg");
  }
}

@mixin keyframe($name) {
  @keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }
  }

  @-moz-keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }
  }

  @-webkit-keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }  
  }

  @-ms-keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }  
  }

  @-o-keyframes $name {  
    from { clip: rect(1px, auto, auto, auto); }
    to { clip: rect(0px, auto, auto, auto); }  
  } 
}

@mixin animation($name) {
  animation-duration: 0.001s;
  -o-animation-duration: 0.001s;
  -ms-animation-duration: 0.001s;
  -moz-animation-duration: 0.001s;
  -webkit-animation-duration: 0.001s;

  animation-name: $name;
  -o-animation-name: $name;
  -ms-animation-name: $name;        
  -moz-animation-name: $name;
  -webkit-animation-name: $name;
}

@mixin multi-column($columns-large: 2, $columns-small: 1, $column-gap: 0.5em) {
  display: block;

  -moz-column-count: $columns-small;
  -moz-column-gap: $column-gap;
  -webkit-column-count: $columns-small;
  -webkit-column-gap: $column-gap;
  column-count: $columns-small;
  column-gap: $column-gap;

  @media only screen and (min-width: 48em) {  
    -moz-column-count: $columns-large;
    -moz-column-gap: $column-gap;
    -webkit-column-count: $columns-large;
    -webkit-column-gap: $column-gap;
    column-count: $columns-large;
    column-gap: $column-gap;
  }
}

@mixin more-button() {
  @include grid-row(nest);

  margin-left: 0em;
  margin-right: 0em;

  & > .content {
    @include grid-column(12);
    
    margin-top: 10px;
    text-align: center;
  }
}

@mixin standard-padding() {
  padding-left: 0.4em;
  padding-right: 0.4em;

  @media only screen and (min-width: 48em) {
    padding-left: 0.9em;
    padding-right: 0.9em;
  }
}

@mixin standard-bar-background($color: $primary-color, $clear: false, $shadow: true) {
  background-color: $color;
  @if $clear { clear: both; }
}

@mixin standard-panel-color() {
  background-color: $standard-panel-bg;
  // border: 1px solid $standard-border-color;
}

@mixin standard-corners($position: "all") {
  @include border-radius($standard-border-size);
}

@mixin standard-bar() {
  // @include standard-bar-background($primary-color, true);
  
  border-top: 2px solid $primary-color;
  font-size: 0.9em;
  margin-left: 0px;
  margin-right: 0px;
  margin-top: 0;
  // box-shadow: 0px 0px 10px #CCC, 0px 0px 10px #CCC;
  cursor: pointer;
}

@mixin entry-with-profile($picture-width: 4em, $fixed-details: true) {
  @include grid-row(nest);
  $top-section-margin: 0.5em;
  $top-section-padding: 0.3em;
  $top-section-height: $picture-width;

  padding: $top-section-padding 0;
  margin: $top-section-margin 0 0 0;

  .top-section {
    @include grid-column(12);

    @if $fixed-details { height: $top-section-height !important; }
    font-size: 1em;
    color: black;
    margin-bottom: 0.5em;
    padding: 0.3em 0.5em;

    .picture {
      float: left;
      width: $picture-width - 0.4em !important;
      height: $picture-width - 0.2em !important;

      // @media only screen and (min-width: 48em) {
      //   height: $picture-width !important;
      //   width: $picture-width !important;
      // }

      img {
        @include border-radius($standard-border-size);
          margin-top: 8px;

        // @media only screen and (min-width: 48em) {
        //   margin-left: 0px;
        // }
      }
    }

    .details {
      @if $fixed-details { height: $picture-width !important; }
    
      margin-left: $picture-width + 0.2em;
      padding-top: 0.78em;

      // @media only screen and (min-width: 48em) {
      //   @if $fixed-details { height: $picture-width !important; }
      // }

      .owner {
        line-height: 1em;
      }

      .date {
        font-size: 0.9em;
        color: #999999;
        line-height: 1.7em;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        // @media only screen and (min-width: 48em) {
          // &:before {
          //   content: " - ";
          // }
        // }
      }
    }    
  }

  .actions {
    height: $top-section-height !important;
    margin-top: -$top-section-padding;
    font-size: 1em;
    color: black;
    z-index: 102;
    position: absolute;
    right: emCalc(-1px);
    display: none;

    @media only screen and (min-width: 48em) {
     // margin-right: $picture-width;
    }

    a.action {
      width: 2em;
      height: 2em;
      font-weight: bold;
      display: inline-block;

      &.remove {
        padding-left: 0.7em;
        padding-top: 0.5em;
        background-color: $warning-color;

        &:before {
          content: "X";
          color: lighten($warning-color, 50%);
        }
      }
    }
  }

  .content {
    @include grid-column(12);

    padding: 0.5em;

    p:last-of-type {
      margin-bottom: 0em;
    }
  }
}

@mixin arrow($size: 10px) {
  margin: 5px;
  height: 0;
  width: 0;    
  display: inline-block;
  zoom: 1;

  &.right {
      border-left: $size solid white;
      border-top: $size solid transparent;
      border-bottom: $size solid transparent;    
  }

  &.left {
      border-right: $size solid white;
      border-top: $size solid transparent;
      border-bottom: $size solid transparent;    
  }

  &.down {
      border-top: $size solid white;
      border-left: $size solid transparent;
      border-right: $size solid transparent;    
  }

  &.up {
      border-bottom: $size solid white;
      border-left: $size solid transparent;
      border-right: $size solid transparent;    
  }
}